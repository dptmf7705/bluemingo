<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bluemingo.bluemingo.domain.SellerVOMapper">

	<select id="getNow" resultType="String">
		select now()
	</select>


	<!-- 게시물 생성 *타임(TIME) 추가 해야함 -->
	<insert id="create">
		insert into item (item_name,item_price,item_detail,item_image)
		values(#{item_name}, #{item_price}, #{item_detail}, #{item_image})
	</insert>

	<!-- 게시물 조회(bno에 해당하는 단일 게시물 조회) -->
	<select id="read" resultType="com.bluemingo.bluemingo.domain.SellerVO">
		select
		*
		from
		item
		where item_key= #{item_key}
	</select>

	<!-- 게시물 업데이트 -->
	<update id="update">
		update advertise
		set item_name = #{item_name}, item_price = #{item_price}, item_detail =
		#{item_detail},
		item_image = #{item_image}
		where item_name = #{item_name}
	</update>

	<!-- 게시물 삭제 -->
	<delete id="delete">
		delete from item where item_key = #{item_key}
	</delete>

	<!-- 게시물 조회( 모든 게시물 조회 ) -->
	<select id="listAll" resultType="com.bluemingo.bluemingo.domain.SellerVO">
	<![CDATA[
	select c.company_type, c.company_key, c.company_president, c.company_name, c.company_phone, 
	c.company_prephone, lists.now, lists.total
	from company c,
	(
	select closing.company_name as cname, count(closing.rlist) as now, count(closing.total) as total
	from (
	select company_name, null as total, case trade_status when 1 then 1 else 2 end as rlist
	from trade t, company c, advertise ad
	where t.company_key = c.company_key AND ad.adv_key = t.advertise_adv_key
	union all
	select company_name, case trade_status when 1 then 3 else 3 end as rlist, null
	from trade t, company c, advertise ad
	where t.company_key = c.company_key AND ad.adv_key = t.advertise_adv_key
	)as closing
	where closing.rlist = 1 or closing.total = 3
	group BY closing.company_name
	)as lists
	where lists.cname = c.company_name;
	]]>
	</select>

	<select id="search" resultType="com.bluemingo.bluemingo.domain.SellerVO">
	<![CDATA[
	select c.company_type, c.company_key, c.company_president, c.company_name, c.company_phone, 
	c.company_prephone, lists.now as progress_adv, lists.total as total_adv
	from company c,
	(
	select closing.company_name as cname, count(closing.rlist) as now, count(closing.total) as total
	from (
	select company_name, null as total, case trade_status when 1 then 1 else 2 end as rlist
	from trade t, company c, advertise ad
	where t.company_key = c.company_key AND ad.adv_key = t.advertise_adv_key
	union all
	select company_name, case trade_status when 1 then 3 else 3 end as rlist, null
	from trade t, company c, advertise ad
	where t.company_key = c.company_key AND ad.adv_key = t.advertise_adv_key
	)as closing
	where closing.rlist = 1 or closing.total = 3
	group BY closing.company_name
	)as lists
	where lists.cname = c.company_name
	]]>
	<choose>
		<when test='search_table == "company_name"'>
			and c.company_name = #{search_key};
		</when>
		<when test="search_table == company_key">
			and c.company_key = #{search_key};
		</when>
		<when test="search_table == company_phone">
			and c.company_phone = #{search_key};
		</when>
		<when test="search_table == company_prephone">
			and c.company_prephone = #{search_key};
		</when>
		<when test="search_table == company_serial">
			and c.company_serial = #{search_key};
		</when>
		<when test="search_table == company_president">
			and c.company_president = #{search_key};
		</when>
		<otherwise>
		        
		    </otherwise>
	</choose>
	</select>




	<!-- 게시물 조회( 무한 스크롤다운 ) 마지막 bno가 Integer타입으로 넘어오는 상태..그럼 컨트롤러에서는 bno-1에 
		해당하는 것을 dao로 넘겨줄 것이다. -->
	<select id="infiniteScrollDown" resultType="com.bluemingo.bluemingo.domain.SellerVO">
	<![CDATA[
	select
		*
	from
		item
	where item_key <= #{item_key}    
	and item_key > #{item_key}-20
	order by item_key desc
	]]>
	</select>

	<!-- 게시물 조회( 무한 스크롤 업) 물론 마지막 bno를 넘겨서 offset을 다르게 주어도 되지만 이론상 가장 첫째의 bno를 
		받아와서 그것보다 먼저의 게시물 20개를 가져오는게 자연스럽기 때문에 그렇게 구현하자. -->
	<select id="infiniteScrollUp" resultType="com.bluemingo.bluemingo.domain.SellerVO">
	<![CDATA[
	select
		*
	from
		item
	where item_key >= #{item_key}    
	and item_key < #{item_key}+20
	order by item_key desc
	]]>
	</select>

	
	
	<select id="findTest" resultType="com.bluemingo.bluemingo.domain.SellerVO">
		SELECT u.user_key, u.user_name, u.user_phone, u.user_id, p.product_key, r.res_type
		FROM user u, product p, reservation r, trade t
		WHERE r.user_user_key = u.user_key
		and r.trade_trade_key = t.trade_key
		and t.product_key = p.product_key
		<choose>
		    <when test="user_name != null">
		        AND u.user_name like #{user_name}
		    </when>
		    <when test="product_key != null">
				AND p.product_key like #{product_key}
		    </when>
		    <otherwise>
		        
		    </otherwise>
		</choose>
		
	</select>
	
	<!-- <select id="findTest" resultType="com.bluemingo.bluemingo.domain.TestVO">
		SELECT u.user_key, u.user_name, u.user_phone, u.user_id, p.product_key, r.res_type
		FROM user u, product p, reservation r, trade t
		WHERE r.user_user_key = u.user_key
		and r.trade_trade_key = t.trade_key
		and t.product_key = p.product_key
		<if test="user_name != null">
			AND u.user_name like #{user_name}
		</if>
		<if test="product_key != null">
			AND p.product_key like #{product_key}
		</if>
	</select> -->




</mapper>
    